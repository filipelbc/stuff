set nocompatible

" workaround weird slowness in insert mode
let g:polyglot_disabled = ['org']

" deoplete
let g:deoplete#enable_at_startup = 1

call plug#begin()
" fancy
Plug 'Chiel92/vim-autoformat'
Plug 'w0rp/ale'
Plug 'airblade/vim-gitgutter'
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
" general
Plug 'lifepillar/vim-solarized8'
Plug 'scrooloose/nerdcommenter'
Plug 'godlygeek/tabular'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'editorconfig/editorconfig-vim'
Plug 'preservim/nerdtree'
" polyglot
Plug 'sheerun/vim-polyglot'
" org mode
Plug 'filipelbc/orgmode.vim'
" Jinja
Plug 'Glench/Vim-Jinja2-Syntax'
" rust
Plug 'rust-lang/rust.vim'
" additional ssh files
Plug 'qnighy/vim-ssh-annex'
" postgresql
Plug 'lifepillar/pgsql.vim'
" javascript
Plug 'pangloss/vim-javascript'
" go
Plug 'fatih/vim-go'
call plug#end()

"===============================================================================
" Settings:

set autoindent
set autoread
set autowrite
set backspace=indent,eol,start
set backup
set backupdir=/var/tmp/$USER/vim/backups/
set breakindent
set colorcolumn=80
set cursorline
set diffopt=filler,vertical
set directory=/var/tmp/$USER/vim/swap/
set encoding=utf-8
set expandtab
set fileencoding=utf-8
set fillchars=vert:\ ,
set foldlevelstart=10
set foldmethod=indent
set foldminlines=5
set gdefault
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set linebreak
set list listchars=tab:»·,trail:·,nbsp:·
set modelines=0
set mouse=a
set nomodeline
set number
set ruler
set scrolloff=1
set sessionoptions=sesdir,tabpages
set shiftwidth=4
set showcmd
set showmatch
set showmode
set smartcase
set softtabstop=4
set splitbelow
set splitright
set tabstop=4
set termguicolors
set ttyfast
set wildmenu
set wildmode=longest,full

set background=light
let g:solarized_term_italics = 1
let g:solarized_enable_extra_hi_groups = 1
let g:airline_theme='solarized'
colorscheme solarized8_high

"===============================================================================
" Autocommands:

" open all folds when openning a file
autocmd BufWinEnter * normal zR

"===============================================================================
" Options:

" Vim-Ale
let g:airline#extensions#ale#enabled = 1

let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

let g:ale_sign_error = 'E'
let g:ale_sign_warning = 'W'

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 1
let g:ale_lint_on_save = 1

let g:ale_open_list = 0
let g:ale_set_balloons = 1
let g:ale_virtualtext_cursor = 0
let g:ale_cursor_detail = 1
let g:ale_close_preview_on_insert = 1
let g:ale_floating_preview = 1
let g:ale_floating_window_border = ['│', '─', '╭', '╮', '╯', '╰', '│', '─']

let g:ale_linters = {
    \    'python': ['flake8'],
    \}
let g:ale_linters_ignore = {
      \   'java': ['javac'],
      \}

call deoplete#custom#option('sources', { '_': ['ale', 'file', 'buffer', 'member'] })
call deoplete#custom#source('file', 'enable_slash_completion', v:true)
call deoplete#custom#source('ale',  'max_menu_width', 0)

" Java
let $JAVA_TOOL_OPTIONS = "-javaagent:/files/git/amberflo/other/lombok.jar"

let g:ale_java_eclipselsp_executable = '/usr/lib/jvm/temurin-19-jdk-amd64/bin/java'
let g:ale_java_eclipselsp_path = '/files/git/amberflo/other/eclipse.jdt.ls'
let g:ale_java_eclipselsp_workspace_path = '/tmp/jdtls/' . split(getcwd(), '/')[-1]

let g:java_highlight_functions = 1
let g:java_highlight_java = 1

" Orgmode
let g:org_start_with_closed_sections = 'endstate,comment'

let g:org_custom_todo_styles = {
            \   'DONE':     ['#22aa22', 'NONE',    'inverse,bold'],
            \   'ACCEPTED': ['#4444ff', 'NONE',    'inverse,bold'],
            \   'CLOSED':   ['#93a1a1', 'NONE',    'inverse,bold'],
            \   'WAITING':  ['#839496', '#ffe000', 'bold'],
            \   'REVIEW':   ['#ffaa00', 'NONE',    'inverse,bold'],
            \   'WIP':      ['#ff7700', 'NONE',    'inverse,bold'],
            \   'TODO':     ['#bb1100', 'NONE',    'inverse,bold'],
            \ }

" NerdCommenter
let g:NERDDefaultAlign = 'left'

" Vim-Autoformat
let g:formatdef_orgformat_org = '"orgformat -"'
let g:formatters_org = ['orgformat_org']

let g:formatdef_jsbeautify_json = '"js-beautify -n -m 1 --editorconfig -"'
let g:formatters_json = ['jsbeautify_json']

let g:formatdef_prettier_javascript = '"npx prettier --stdin-filepath foo.js"'
let g:formatters_javascript = ['prettier_javascript']

let g:formatdef_prettier_typescript = '"npx prettier --stdin-filepath foo.ts"'
let g:formatters_typescript = ['prettier_typescript']

let g:formatdef_prettier_typescriptreact = '"npx prettier --stdin-filepath foo.tsx"'
let g:formatters_typescriptreact = ['prettier_typescriptreact']

let g:formatters_python = ['black', 'autopep8']

" PostgreSQL
let g:sql_type_default = 'pgsql'

" Go
let g:go_fmt_command = 'gofmt'

"===============================================================================
" Maps:

let mapleader = ","

nnoremap <leader><leader>a      :call SyntaxAttributes()<CR>

" global clipboard
nnoremap <leader><leader>p      "+p
vnoremap <leader><leader>y      "+y

" ale
nnoremap <leader><leader>f      :ALECodeAction<CR>
nnoremap <leader><leader>g      :ALEGoToDefinition<CR>
nnoremap <leader><leader>r      :ALERename<CR>
nnoremap <leader><leader>m      :ALEFindReferences<CR>

" move between splits
nnoremap <C-J>                  <C-W><C-J>
nnoremap <C-K>                  <C-W><C-K>
nnoremap <C-L>                  <C-W><C-L>
nnoremap <C-H>                  <C-W><C-H>

" change split orientation
nnoremap <leader><leader>h      <C-W>t<C-W>K
nnoremap <leader><leader>v      <C-W>t<C-W>H

" close all quicklist, location list, scratch windows
function! CloseQLS()
  let currwin=winnr()
  execute 'windo lcl'
  execute 'windo ccl'
  execute 'windo pc!'
  execute currwin . 'wincmd w'
endfunction

nnoremap <leader><leader>c      :noautocmd call CloseQLS()<CR>

" clean search highlight
nnoremap <leader><space>        :noh<CR>

" nerd tree
nnoremap <C-t>                  :NERDTreeFind<CR>

" less visible 'listchars'
hi SpecialKey guifg=#a9bdc4 cterm=NONE ctermfg=NONE ctermbg=NONE gui=NONE guibg=NONE

" complete with arrows, accept with tab

inoremap <expr> <Tab>       pumvisible() ? "\<C-n>" : "<Tab>"
inoremap <expr> <S-Tab>     pumvisible() ? "\<C-p>" : "<S-Tab>"

inoremap <expr> <Down>      pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Up>        pumvisible() ? "\<C-p>" : "\<Up>"
